generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  email          String          @unique
  imgUrl         String?
  name           String
  createdAt      DateTime        @default(now())
  forgotPassword ForgotPassword?
  loginMode      LoginMode?
  iPlayIn        Player[]
  refreshToken   RefreshToken[]
  teams          Team[]
}

model LoginMode {
  userId   String  @id @unique
  type     String  @default("default")
  password String?
  user     User    @relation(fields: [userId], references: [id])
}

model RefreshToken {
  id        String @id @default(uuid())
  expiresIn Int
  userId    String
  user      User   @relation(fields: [userId], references: [id])
}

model ForgotPassword {
  id        String @id @default(uuid())
  expiresIn Int
  userId    String @unique
  user      User   @relation(fields: [userId], references: [id])
}

model Team {
  id           String        @id @default(uuid())
  name         String
  imgUrl       String?
  ownerId      String
  createdAt    DateTime      @default(now())
  players      Player[]
  owner        User          @relation(fields: [ownerId], references: [id])
  transactions Transaction[]
}

model Player {
  id           String        @id @default(uuid())
  name         String
  position     String
  teamId       String
  accountId    String?
  createdAt    DateTime      @default(now())
  user         User?         @relation(fields: [accountId], references: [id])
  team         Team          @relation(fields: [teamId], references: [id], onDelete: Cascade)
  transactions Transaction[]
}

model Transaction {
  id          String   @id @default(uuid())
  type        String
  description String?
  amount      Float
  teamId      String
  playerId    String?
  createdAt   DateTime @default(now())
  player      Player?  @relation(fields: [playerId], references: [id], onDelete: Cascade)
  team        Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)

  @@index([teamId])
}
